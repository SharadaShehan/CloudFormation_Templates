AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS CloudFormation template to deploy ElastiCache Redis"

Resources:
  # Create a VPC
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "ElastiCacheVPC"

  # Create an Internet Gateway
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "ElastiCacheInternetGateway"

  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Create Public Subnet
  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.1.0/24"
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: "Name"
          Value: "ElastiCachePublicSubnet"

  # Create a Route Table
  RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: "ElastiCacheRouteTable"

  # Create a Route
  Route:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  # Associate Route Table with Subnet
  SubnetRouteTableAssociation1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  # Create a Security Group for ElastiCache
  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable access to ElastiCache"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 6379
          ToPort: 6379
          CidrIp: "0.0.0.0/0"

  # Create an ElastiCache Subnet Group
  ElastiCacheSubnetGroup:
    Type: "AWS::ElastiCache::SubnetGroup"
    Properties:
      Description: "Subnets for ElastiCache"
      SubnetIds:
        - !Ref PublicSubnet

  # Create an ElastiCache Cluster
  ElastiCacheCluster:
    Type: "AWS::ElastiCache::CacheCluster"
    Properties:
      CacheNodeType: "cache.t3.micro"
      Engine: "redis"
      NumCacheNodes: 1
      VpcSecurityGroupIds: 
        - !Ref SecurityGroup
      CacheSubnetGroupName: !Ref ElastiCacheSubnetGroup
      EngineVersion: "6.x"

Outputs:
  ElastiCachePrimaryEndpoint:
    Description: "The primary endpoint to access the ElastiCache Redis cluster"
    Value: !GetAtt ElastiCacheCluster.RedisEndpoint.Address
    Export:
      Name: "ElastiCachePrimaryEndpoint"
